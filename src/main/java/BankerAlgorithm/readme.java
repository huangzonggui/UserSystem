//2. 银行家算法
//        “银行家算法”（Banker’s Algorithm）：针对多体资源类。
//        设计思想
//        当用户申请一组资源时，系统必须做出判断：如果把这些资源分出去，系统是否还处于安全状态。若是，就可以分出这些资源；否则，该申请暂不予满足。

//单种银行家算法
//        (1) 在安全状态下，系统接到进程的资源请求后，先假定接受这一请求，把需要的资源分配给这个进程。
//        (2) 在该假设下，检查每个进程对资源的还需要数。看能否找到一个进程，其还需数目小于系统剩余资源数。如果找不到，那么系统就有可能死锁，因为任何进程都无法运行结束。
//        (3) 若找到了，假设它获得了最大资源数，并运行结束。于是把它的“能执行完”标志置为1。这样就能假定收回它使用的所有资源，使系统剩余资源数增加。
//        (4) 在“能执行完”标志为0的进程中重复以上两步，直到找不到资源还需数小于系统剩余资源数的进程时为止。
//        (5) 若所有进程的“能执行完”均为1，表示接受这次请求是安全的；否则暂时不能接受进程的这次资源请求。


